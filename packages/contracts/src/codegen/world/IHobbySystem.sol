// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

import { IWorld } from "./IWorld.sol";

interface IHobbySystem {
  function requestRandomSeed(bytes32 catId, bytes32 hobbyId) external;

  function getRawRandomSeed(bytes32 hobbyId) external view returns (uint256);

  function getCatRandomSeed(bytes32 hobbyId, bytes32 userId, bytes32 catId) external view returns (uint256);

  function getTagRange(
    bytes32 hobbyId,
    bytes32 userId,
    bytes32 catId,
    uint256 randomSeed
  ) external view returns (bytes32[] memory);

  function isCatResting(bytes32 catId, bytes32 hobbyId, uint8 tier) external view returns (bool);

  function getCatHungerConsumption(bytes32 hobbyId, bytes32 catId, uint8 tier) external view returns (uint32);

  function getDropRate(bytes32 lastFeedFoodId) external view returns (uint32);

  function getCoinReward(
    bytes32 lastFeedFoodId,
    uint32 requiredHunger,
    uint256 randomSeed,
    IWorld world
  ) external view returns (uint256);

  function getCatExpReward(
    bytes32 catId,
    uint32 requiredHunger,
    uint256 randomSeed,
    IWorld world
  ) external view returns (uint32);

  function getUserExpReward(
    bytes32 userId,
    uint32 requiredHunger,
    uint256 randomSeed,
    IWorld world
  ) external view returns (uint32);

  function getDuration(bytes32 hobbyId, uint8 tier, uint256 randomSeed, IWorld world) external view returns (uint256);

  function startActivity(bytes32 catId, bytes32 hobbyId, bytes32 tagId) external;

  function claimReward(bytes32 catId, bytes32 hobbyId) external;
}
